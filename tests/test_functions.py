# Hex data to decode (remove '0x' prefix)
data = "0x4a83b8f89adf6931c0a1dcedc636b812c85806a10f75f0722d7e339ea4296893000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xA349a37dD7EaF03218c7321a87Bf6a2a13Eb86B501000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000x00000000000000000000000000000000000000000x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008d80ff0a0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000007900632ffd8a237c004ea8f91d06547427b0410033dc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000243d1fee84000000000000000000000000000000000000000000000000000000000000361800000000000000"

# Convert hex string to bytes
data_bytes = bytes.fromhex(data[2:])

# Function to read a chunk of bytes
def read_bytes(data, start, length):
    return data[start:start + length]

# Initialize index
index = 0

# Read the transactions
while index < len(data_bytes):
    operation = read_bytes(data_bytes, index, 1)
    index += 1
    to = read_bytes(data_bytes, index, 20)
    index += 20
    value = read_bytes(data_bytes, index, 32)
    index += 32
    data_length = read_bytes(data_bytes, index, 32)
    index += 32
    data_value = read_bytes(data_bytes, index, int.from_bytes(data_length, 'big'))
    index += int.from_bytes(data_length, 'big')

    # Print decoded transaction
    print(f"Operation: {int.from_bytes(operation, 'big')}")
    print(f"To: 0x{to.hex()}")
    print(f"Value: {int.from_bytes(value, 'big')}")
    print(f"Data Length: {int.from_bytes(data_length, 'big')}")
    print(f"Data: 0x{data_value.hex()}")
    print('-' * 80)
